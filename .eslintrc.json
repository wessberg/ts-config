{
	"env": {
		"es2020": true,
		"shared-node-browser": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"prettier"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "tsconfig.json",
		"sourceType": "module"
	},
	"plugins": [
		"@typescript-eslint",
		"eslint-plugin-import",
		"eslint-plugin-jsdoc"
	],
	"rules": {
		"prefer-const": [
			"error",
			{
				"destructuring": "all"
			}
		],
		"@typescript-eslint/array-type": "error",
		"@typescript-eslint/await-thenable": "error",
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": "variable",
				"format": ["strictCamelCase", "UPPER_CASE"],
				"filter": {
					"regex": "^_",
					"match": false
				}
			},
			{
				"selector": "function",
				"format": ["strictCamelCase"]
			},
			{
				"selector": "parameter",
				"format": ["strictCamelCase"],
				"filter": {
					"regex": "^_",
					"match": false
				}
			},
			{
				"selector": "typeLike",
				"format": ["PascalCase"]
			},
			{
				"selector": "enum",
				"format": ["PascalCase"],
				"suffix": ["Kind"]
			},
			{
				"selector": "enumMember",
				"format": ["UPPER_CASE"]
			},
			{
				"selector": "memberLike",
				"format": ["camelCase"],
				"filter": {
					"regex": "[- ]|^_",
					"match": false
				}
			},
			{
				"selector": "memberLike",
				"modifiers": ["static"],
				"format": ["camelCase", "UPPER_CASE"],
				"filter": {
					"regex": "[- ]|^_",
					"match": false
				}
			},
			{
				"selector": "memberLike",
				"modifiers": ["readonly"],
				"format": ["camelCase", "UPPER_CASE"],
				"filter": {
					"regex": "[- ]|^_",
					"match": false
				}
			}
		],
		"@typescript-eslint/consistent-type-definitions": "error",
		"@typescript-eslint/consistent-type-imports": "error",
		"@typescript-eslint/explicit-member-accessibility": [
			"error",
			{
				"accessibility": "no-public"
			}
		],
		"@typescript-eslint/member-delimiter-style": "error",
		"@typescript-eslint/no-explicit-any": "error",
		"@typescript-eslint/no-misused-new": "error",
		"@typescript-eslint/no-require-imports": "error",
		"@typescript-eslint/no-unnecessary-qualifier": "error",
		"@typescript-eslint/no-unnecessary-type-arguments": "error",
		"@typescript-eslint/no-unnecessary-type-assertion": "error",
		"@typescript-eslint/no-var-requires": "error",
		"@typescript-eslint/promise-function-async": "error",
		"@typescript-eslint/strict-boolean-expressions": "error",
		"@typescript-eslint/prefer-readonly": "error",
		"@typescript-eslint/no-shadow": "error",
		"@typescript-eslint/no-redeclare": "error",
		"arrow-body-style": "error",
		"constructor-super": "error",
		"curly": [
			"error",
			"multi-line"
		],
		"dot-notation": "error",
		"eqeqeq": [
			"error",
			"smart"
		],
		"id-match": "error",
		"import/no-deprecated": "error",
		"jsdoc/no-types": "error",
		"max-classes-per-file": [
			"error",
			1
		],
		"no-empty": [
			"error",
			{
				"allowEmptyCatch": true
			}
		],
		"no-eval": "error",
		"no-new-wrappers": "error",
		"no-sequences": "error",
		"no-sparse-arrays": "error",
		"no-undef-init": "error",
		"no-var": "error",
		"one-var": [
			"error",
			"never"
		],
		"prefer-object-spread": "error",
		"spaced-comment": "error",
		"use-isnan": "error",
		"yoda": "error",
		"no-redeclare": "off",
		"no-shadow": "off",
		"no-underscore-dangle": "off",
		"no-cond-assign": "off",
		"no-constant-condition": "off",
		"no-extra-boolean-cast": "off",
		"no-async-promise-executor": "off",
		"import/no-default-export": "off",
		"@typescript-eslint/explicit-module-boundary-types": "off",
		"@typescript-eslint/no-this-alias": "off",
		"@typescript-eslint/no-non-null-assertion": "off",
		"@typescript-eslint/no-empty-interface": "off",
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-use-before-define": "off"
	}
}
